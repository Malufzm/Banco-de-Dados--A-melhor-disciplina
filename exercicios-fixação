a)
CREATE TABLE nomes (
    nome VARCHAR(255)
);

INSERT INTO nomes (nome) VALUES ('Roberta');
INSERT INTO nomes (nome) VALUES ('Roberto');
INSERT INTO nomes (nome) VALUES ('Maria Clara');
INSERT INTO nomes (nome) VALUES ('João');

b)
SELECT UPPER(nome) FROM nomes;

c)
SELECT nome, LENGTH(nome) AS tamanho FROM nomes;

d)
SELECT
    CASE WHEN nome LIKE '%a%' THEN CONCAT('Sra. ', nome)
         ELSE CONCAT('Sr. ', nome)
    END AS nome_com_tratamento
FROM nomes;


a)
CREATE TABLE produtos (
    produto VARCHAR(255),
    preco DECIMAL(10, 2),
    quantidade INT
);

INSERT INTO produtos (produto, preco, quantidade) VALUES ('Produto A', 25.50, 10);
INSERT INTO produtos (produto, preco, quantidade) VALUES ('Produto B', 49.99, 5);
INSERT INTO produtos (produto, preco, quantidade) VALUES ('Produto C', 99.90, 0);
INSERT INTO produtos (produto, preco, quantidade) VALUES ('Produto D', 12.75, -3);

b) 
SELECT produto, ROUND(preco, 2) AS preco_arredondado FROM produtos;

c)
SELECT produto, ABS(quantidade) AS quantidade_absoluta FROM produtos;

d) 
SELECT AVG(preco) AS media_precos FROM produtos;


a) 
CREATE TABLE eventos (
    data_evento DATE
);

INSERT INTO eventos (data_evento) VALUES ('2023-10-01');
INSERT INTO eventos (data_evento) VALUES ('2023-10-05');
INSERT INTO eventos (data_evento) VALUES ('2023-10-10');

b) 
INSERT INTO eventos (data_evento) VALUES (NOW());

c) 
SELECT DATEDIFF(data_evento, '2023-10-01') AS dias_passados FROM eventos;

d) 
SELECT data_evento, DAYNAME(data_evento) AS nome_dia_semana FROM eventos;


a) 
SELECT produto,
       IF(quantidade > 0, 'Em estoque', 'Fora de estoque') AS status_estoque
FROM produtos;

b) Use a função CASE para classificar os produtos em categorias de preço: "Barato", "Médio" e "Caro":
SELECT produto,
       CASE
           WHEN preco < 50 THEN 'Barato'
           WHEN preco >= 50 AND preco <= 100 THEN 'Médio'
           ELSE 'Caro'
       END AS categoria_preco
FROM produtos;


a) 
CREATE FUNCTION TOTAL_VALOR(preco DECIMAL(10, 2), quantidade INT) RETURNS DECIMAL(10, 2)
BEGIN
    RETURN preco * quantidade;
END;

b) 
SELECT produto, quantidade, TOTAL_VALOR(preco, quantidade) AS valor_total FROM produtos;
